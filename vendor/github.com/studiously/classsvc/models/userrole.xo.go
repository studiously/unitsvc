// Package models contains the types for schema 'public'.
package models

// GENERATED BY XO. DO NOT EDIT.

import (
	"database/sql/driver"
	"errors"
)

// UserRole is the 'user_role' enum type from schema 'public'.
type UserRole uint16

const (
	// UserRoleStudent is the 'student' UserRole.
	UserRoleStudent = UserRole(1)

	// UserRoleTeacher is the 'teacher' UserRole.
	UserRoleTeacher = UserRole(2)
)

// String returns the string value of the UserRole.
func (ur UserRole) String() string {
	var enumVal string

	switch ur {
	case UserRoleStudent:
		enumVal = "student"

	case UserRoleTeacher:
		enumVal = "teacher"
	}

	return enumVal
}

// MarshalText marshals UserRole into text.
func (ur UserRole) MarshalText() ([]byte, error) {
	return []byte(ur.String()), nil
}

// UnmarshalText unmarshals UserRole from text.
func (ur *UserRole) UnmarshalText(text []byte) error {
	switch string(text) {
	case "student":
		*ur = UserRoleStudent

	case "teacher":
		*ur = UserRoleTeacher

	default:
		return errors.New("invalid UserRole")
	}

	return nil
}

// Value satisfies the sql/driver.Valuer interface for UserRole.
func (ur UserRole) Value() (driver.Value, error) {
	return ur.String(), nil
}

// Scan satisfies the database/sql.Scanner interface for UserRole.
func (ur *UserRole) Scan(src interface{}) error {
	buf, ok := src.([]byte)
	if !ok {
		return errors.New("invalid UserRole")
	}

	return ur.UnmarshalText(buf)
}
