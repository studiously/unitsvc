sudo: required

go_import_path: github.com/ory/hydra

services:
  - docker

env:
  - DOCKER_BIND_LOCALHOST=true DATABASE_URL=memory

language: go

go:
  - 1.8

before_install:
  - sudo apt-get install curl

install:
  - go get github.com/mattn/goveralls golang.org/x/tools/cmd/cover github.com/Masterminds/glide github.com/mitchellh/gox
  - git clone https://github.com/docker-library/official-images.git ~/official-images
  - glide install
  - go install github.com/ory/hydra
  - glide update
  - go install github.com/ory/hydra

script:
  - |-
    touch ./coverage.tmp && echo 'mode: atomic' > coverage.txt && go list ./... | grep -v /vendor | xargs -n1 -I{} sh -c 'go test -covermode=atomic -coverprofile=coverage.tmp -coverpkg $(go list ./... | grep -v /vendor | tr "\n" ",") {} && tail -n +2 coverage.tmp >> coverage.txt' && rm coverage.tmp
  - goveralls -coverprofile="coverage.txt"
  - go test -race $(go list ./... | grep -v /vendor | grep -v /cmd)
  - go test -v -bench=.* -run=none $(glide novendor)
  - docker build -t hydra-travis-ci .
  - docker run -d hydra-travis-ci
  - DATABASE_URL=memory hydra host --dangerous-auto-logon --dangerous-force-http &
  - while ! echo exit | nc localhost 4444; do sleep 1; done
# Test clients
  - hydra clients create --id foobar
  - hydra clients delete foobar
# Test token on arbitrary endpoints
  - |-
    curl --header "Authorization: bearer $(hydra token client)" http://localhost:4444/clients
# Test token validation
  - hydra token validate $(hydra token client)

after_success:
  - |-
    [ "${TRAVIS_TAG}" != "" ] && [ "${TRAVIS_GO_VERSION}" == "1.8" ] && gox -ldflags "-X github.com/ory/hydra/cmd.Version=`git describe --tags` -X github.com/ory/hydra/cmd.BuildTime=`TZ=UTC date -u '+%Y-%m-%dT%H:%M:%SZ'` -X github.com/ory/hydra/cmd.GitHash=`git rev-parse HEAD`" -output "dist/{{.Dir}}-{{.OS}}-{{.Arch}}"

deploy:
  provider: releases
  file_glob: true
  api_key: "$GITHUB_TOKEN"
  file: "dist/*"
  skip_cleanup: true
  on:
    tags: true
    go: 1.8
